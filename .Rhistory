debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "Minnesota State")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
#working.directory <- "~/Documents/hrd/collegescorecardanalysis"
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
####################################
##Side by Side Face Graph by inst ##
####################################
#### Black and white version ####
graph_bw <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's" | DegreeLevel == "Bachelor's") %>%
mutate(DegreeLevel = factor(DegreeLevel,
levels = c("Bachelor's",
"Certificate/Associate's"                   ),
labels=c("Predominantly 4-Year Degree Granting",
"Predominantly 2-Year Degree Granting"))) %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group = factor(mn.category)))
sidebyside_bw <- graph_bw +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
facet_grid(.~DegreeLevel) +
labs(title="Federal Debt Loads Upon Entering Repayment by Institution Type, 1997-2013")
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "sidebyside_bw.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
sidebyside_bw
dev.off()
#### Color line version ####
graph_color <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's" | DegreeLevel == "Bachelor's") %>%
mutate(DegreeLevel = factor(DegreeLevel,
levels = c("Bachelor's",
"Certificate/Associate's"                   ),
labels=c("Predominantly 4-Year Degree Granting",
"Predominantly 2-Year Degree Granting"))) %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
sidebyside_color <- graph_color+
geom_line() +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(color = guide_legend(title = "")) +
theme_minimal() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
facet_grid(.~DegreeLevel) +
labs(title="Federal Debt Loads Upon Entering Repayment by Institution Type, 1997-2013")
#write file out to .png file for microsoft word
sidebyside_color
ggsave("sidebyside_color.png", width=10, height=6)
# #write file out to .emf file for microsoft word
# library(devEMF)
# emf(file = "sidebyside_color.emf",
#     bg = "transparent",
#     family = "Helvetica",
#     width = 10,
#     height = 6)
# sidebyside_color
# dev.off()
####################################
## separate graphs for 2 and 4 yr ##
####################################
#### Black and white 2yr graph ####
graph_twoyr <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's") %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group=factor(mn.category)))
graph_twoyr <-graph_twoyr +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
labs(title="Federal Debt Loads Upon Entering Repayment, Two-year Schools, 1997-2013")
graph_twoyr
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "twoyearschools.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
graph_twoyr
dev.off()
#### Black and white 4yr graph ####
graph_fouryr <- graphcategories %>%
filter(DegreeLevel == "Bachelor's") %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group=factor(mn.category)))
graph_fouryr <-graph_fouryr +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
labs(title="Federal Debt Loads Upon Entering Repayment, Four-year Schools, 1997-2013")
graph_fouryr
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "fouryearschools.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
graph_fouryr
dev.off()
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
load("debtdata_clean.rda")
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
View(debtdata)
setwd(working.directory)
library(dplyr)
library(readr)
library(purrr)
readdata <- function(filename) {
# get filename for a given year
year <- as.numeric(substr(filename, 7, 10))+1
#paste together filename and path
path <- paste(data.folder, filename, sep = "")
data <- read_csv(path, na = c("NULL")) %>%
mutate(data.year = year) %>%
filter(STABBR %in% states.to.import)
names(data)[1] <- "UNITID"
data <- select(data, one_of(variables.to.select))
return(data)
}
datalist <- map(data.files, readdata)
debtdata <- bind_rows(datalist)
########################################
###  Set Parameters for Import Here  ###
########################################
#Select states to import using 2-digit state abbreviation
states.to.import <- c("MN")
# Folder you will be working in
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
#set path to the data folder
data.folder <- "C:/SeanLocalData/debt_earnings/"
data.files <- list.files(data.folder)
# pick variables to import. Variable names must be in quotes because
# they are passed to the select function via the "one_of" argument.
# data dictionary is here: https://collegescorecard.ed.gov/data/documentation/
variables.to.select <- c( "UNITID", "INSTNM", "CITY", "STABBR", "ZIP", "PREDDEG", "HIGHDEG", "CONTROL","ST_FIPS",
"DEBT_MDN", "GRAD_DEBT_MDN", "WDRAW_DEBT_MDN", "PELL_DEBT_MDN", "NOPELL_DEBT_MDN",
"FEMALE_DEBT_MDN", "MALE_DEBT_MDN", "LOAN_EVER", "PELL_EVER"
)
########################################
###  Script to create a single data  ###
###  frame with selected years,      ###
###  states, and variables            ###
########################################
setwd(working.directory)
library(dplyr)
library(readr)
library(purrr)
readdata <- function(filename) {
# get filename for a given year
year <- as.numeric(substr(filename, 7, 10))+1
#paste together filename and path
path <- paste(data.folder, filename, sep = "")
data <- read_csv(path, na = c("NULL")) %>%
mutate(data.year = year) %>%
filter(STABBR %in% states.to.import)
names(data)[1] <- "UNITID"
data <- select(data, one_of(variables.to.select))
return(data)
}
datalist <- map(data.files, readdata)
debtdata <- bind_rows(datalist)
debtdata
View(debtdata)
#Select states to import using 2-digit state abbreviation
states.to.import <- c("MN")
# Folder you will be working in
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
#set path to the data folder
data.folder <- "C:/SeanLocalData/debt_earnings/"
data.files <- list.files(data.folder)
# pick variables to import. Variable names must be in quotes because
# they are passed to the select function via the "one_of" argument.
# data dictionary is here: https://collegescorecard.ed.gov/data/documentation/
variables.to.select <- c( "UNITID", "INSTNM", "CITY", "STABBR", "ZIP", "PREDDEG", "HIGHDEG", "CONTROL","ST_FIPS",
"DEBT_MDN", "GRAD_DEBT_MDN", "WDRAW_DEBT_MDN", "PELL_DEBT_MDN", "NOPELL_DEBT_MDN",
"FEMALE_DEBT_MDN", "MALE_DEBT_MDN", "LOAN_EVER", "PELL_EVER", "data.year"
)
########################################
###  Script to create a single data  ###
###  frame with selected years,      ###
###  states, and variables            ###
########################################
setwd(working.directory)
library(dplyr)
library(readr)
library(purrr)
readdata <- function(filename) {
# get filename for a given year
year <- as.numeric(substr(filename, 7, 10))+1
#paste together filename and path
path <- paste(data.folder, filename, sep = "")
data <- read_csv(path, na = c("NULL")) %>%
mutate(data.year = year) %>%
filter(STABBR %in% states.to.import)
names(data)[1] <- "UNITID"
data <- select(data, one_of(variables.to.select))
return(data)
}
datalist <- map(data.files, readdata)
debtdata <- bind_rows(datalist)
#save data to .rda file
save(debtdata, file = "debtdata.rda")
debtdata
##################
### parameters ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$DegreeLevel <- ""
debtdata[(debtdata$preddeg == 1 | debtdata$preddeg == 2),]$DegreeLevel <- "Certificate/Associate's"
debtdata[debtdata$preddeg == 3,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 4,]$DegreeLevel <- "Master's"
#### categorize schools narrowly ####
debtdata$school.category <- ""
#Publics
debtdata[debtdata$control == 1 & debtdata$preddeg == 1, ]$school.category <- "Public Certificate"
debtdata[debtdata$control == 1 & debtdata$preddeg == 2, ]$school.category <- "Public Associate's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 3, ]$school.category <- "Public Bachelor's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 4, ]$school.category <- "Public Graduate"
#non-profits
debtdata[debtdata$control == 2 & debtdata$preddeg == 1, ]$school.category <- "Non-Profit Certificate"
debtdata[debtdata$control == 2 & debtdata$preddeg == 2, ]$school.category <- "Non-Profit Associate's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 3, ]$school.category <- "Non-Profit Bachelor's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 4, ]$school.category <- "Non-Profit Graduate"
#for-profits
debtdata[debtdata$control == 3 & debtdata$preddeg == 1, ]$school.category <- "For-Profit Certificate"
debtdata[debtdata$control == 3 & debtdata$preddeg == 2, ]$school.category <- "For-Profit Associate's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 3, ]$school.category <- "For-Profit Bachelor's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 4, ]$school.category <- "For-Profit Graduate"
#not classified
debtdata[debtdata$control == 0 | debtdata$preddeg == 0, ]$school.category <- "Not Classified"
#### categorize schools into degree categories ####
debtdata$degree.category <- ""
debtdata[debtdata$preddeg== 1 | debtdata$preddeg== 2, ]$degree.category <- "2-Year Degree or Certificate"
debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "Minnesota State")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
#working.directory <- "~/Documents/hrd/collegescorecardanalysis"
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
####################################
##Side by Side Face Graph by inst ##
####################################
#### Black and white version ####
graph_bw <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's" | DegreeLevel == "Bachelor's") %>%
mutate(DegreeLevel = factor(DegreeLevel,
levels = c("Bachelor's",
"Certificate/Associate's"                   ),
labels=c("Predominantly 4-Year Degree Granting",
"Predominantly 2-Year Degree Granting"))) %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group = factor(mn.category)))
sidebyside_bw <- graph_bw +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
facet_grid(.~DegreeLevel) +
labs(title="Federal Debt Loads Upon Entering Repayment by Institution Type, 1997-2013")
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "sidebyside_bw.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
sidebyside_bw
dev.off()
#### Color line version ####
graph_color <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's" | DegreeLevel == "Bachelor's") %>%
mutate(DegreeLevel = factor(DegreeLevel,
levels = c("Bachelor's",
"Certificate/Associate's"                   ),
labels=c("Predominantly 4-Year Degree Granting",
"Predominantly 2-Year Degree Granting"))) %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
sidebyside_color <- graph_color+
geom_line() +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(color = guide_legend(title = "")) +
theme_minimal() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
facet_grid(.~DegreeLevel) +
labs(title="Federal Debt Loads Upon Entering Repayment by Institution Type, 1997-2013")
#write file out to .png file for microsoft word
sidebyside_color
ggsave("sidebyside_color.png", width=10, height=6)
# #write file out to .emf file for microsoft word
# library(devEMF)
# emf(file = "sidebyside_color.emf",
#     bg = "transparent",
#     family = "Helvetica",
#     width = 10,
#     height = 6)
# sidebyside_color
# dev.off()
####################################
## separate graphs for 2 and 4 yr ##
####################################
#### Black and white 2yr graph ####
graph_twoyr <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associate's") %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group=factor(mn.category)))
graph_twoyr <-graph_twoyr +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
labs(title="Federal Debt Loads Upon Entering Repayment, Two-year Schools, 1997-2013")
graph_twoyr
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "twoyearschools.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
graph_twoyr
dev.off()
#### Black and white 4yr graph ####
graph_fouryr <- graphcategories %>%
filter(DegreeLevel == "Bachelor's") %>%
ggplot(aes(x=data.year,
y=meandebt,
shape=factor(mn.category),
group=factor(mn.category)))
graph_fouryr <-graph_fouryr +
geom_line() +
geom_point(size=2) +
scale_x_continuous("", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt (Nominal $)", limits = c(0,20000), labels=dollar) +
guides(shape = guide_legend(title = "")) +
theme_bw() +
theme(legend.position = "bottom") +
theme(axis.text.y = element_text(size=10)) +
labs(title="Federal Debt Loads Upon Entering Repayment, Four-year Schools, 1997-2013")
graph_fouryr
#write file out to .emf file for microsoft word
library(devEMF)
emf(file = "fouryearschools.emf",
bg = "transparent",
family = "Helvetica",
width = 10,
height = 6)
graph_fouryr
dev.off()
