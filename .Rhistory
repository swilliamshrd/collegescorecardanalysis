setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$NumYears <- factor()
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Graduate"
#### categorize schools narrowly ####
debtdata$school.category <- ""
#Publics
debtdata[debtdata$control == 1 & debtdata$preddeg == 1, ]$school.category <- "Public Certificate"
debtdata[debtdata$control == 1 & debtdata$preddeg == 2, ]$school.category <- "Public Associate's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 3, ]$school.category <- "Public Bachelor's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 4, ]$school.category <- "Public Graduate"
#non-profits
debtdata[debtdata$control == 2 & debtdata$preddeg == 1, ]$school.category <- "Non-Profit Certificate"
debtdata[debtdata$control == 2 & debtdata$preddeg == 2, ]$school.category <- "Non-Profit Associate's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 3, ]$school.category <- "Non-Profit Bachelor's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 4, ]$school.category <- "Non-Profit Graduate"
#for-profits
debtdata[debtdata$control == 3 & debtdata$preddeg == 1, ]$school.category <- "For-Profit Certificate"
debtdata[debtdata$control == 3 & debtdata$preddeg == 2, ]$school.category <- "For-Profit Associate's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 3, ]$school.category <- "For-Profit Bachelor's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 4, ]$school.category <- "For-Profit Graduate"
#not classified
debtdata[debtdata$control == 0 | debtdata$preddeg == 0, ]$school.category <- "Not Classified"
#### categorize schools into degree categories ####
debtdata$degree.category <- ""
debtdata[debtdata$preddeg== 1 | debtdata$preddeg== 2, ]$degree.category <- "2-Year Degree or Certificate"
debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "MnSCU 4-Year")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
library(ggthemes)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
debtovertime <- ggplot(graphcategories, aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
debtdata
##################
### parameters ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$NumYears <- factor()
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Graduate"
#### categorize schools narrowly ####
debtdata$school.category <- ""
#Publics
debtdata[debtdata$control == 1 & debtdata$preddeg == 1, ]$school.category <- "Public Certificate"
debtdata[debtdata$control == 1 & debtdata$preddeg == 2, ]$school.category <- "Public Associate's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 3, ]$school.category <- "Public Bachelor's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 4, ]$school.category <- "Public Graduate"
#non-profits
debtdata[debtdata$control == 2 & debtdata$preddeg == 1, ]$school.category <- "Non-Profit Certificate"
debtdata[debtdata$control == 2 & debtdata$preddeg == 2, ]$school.category <- "Non-Profit Associate's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 3, ]$school.category <- "Non-Profit Bachelor's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 4, ]$school.category <- "Non-Profit Graduate"
#for-profits
debtdata[debtdata$control == 3 & debtdata$preddeg == 1, ]$school.category <- "For-Profit Certificate"
debtdata[debtdata$control == 3 & debtdata$preddeg == 2, ]$school.category <- "For-Profit Associate's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 3, ]$school.category <- "For-Profit Bachelor's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 4, ]$school.category <- "For-Profit Graduate"
#not classified
debtdata[debtdata$control == 0 | debtdata$preddeg == 0, ]$school.category <- "Not Classified"
#### categorize schools into degree categories ####
debtdata$degree.category <- ""
debtdata[debtdata$preddeg== 1 | debtdata$preddeg== 2, ]$degree.category <- "2-Year Degree or Certificate"
debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "MnSCU 4-Year")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
library(ggthemes)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
head(debtdata)
##################
### parameters ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$DegreeLevel <- factor()
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Graduate"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 1 | debtdata$preddeg == 2,]$DegreeLevel <- "Graduate"
debtdata$DegreeLevel <- factor(debtdata$DegreeLevel)
debtdata[(debtdata$preddeg == 1 | debtdata$preddeg == 2),]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 3,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 4,]$DegreeLevel <- "Bachelor's"
debtdata$DegreeLevel <- ""
debtdata[(debtdata$preddeg == 1 | debtdata$preddeg == 2),]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 3,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 4,]$DegreeLevel <- "Bachelor's"
head(debtdata)
##################
### parameters ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$DegreeLevel <- ""
debtdata[(debtdata$preddeg == 1 | debtdata$preddeg == 2),]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 3,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 4,]$DegreeLevel <- "Bachelor's"
#### categorize schools narrowly ####
debtdata$school.category <- ""
#Publics
debtdata[debtdata$control == 1 & debtdata$preddeg == 1, ]$school.category <- "Public Certificate"
debtdata[debtdata$control == 1 & debtdata$preddeg == 2, ]$school.category <- "Public Associate's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 3, ]$school.category <- "Public Bachelor's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 4, ]$school.category <- "Public Graduate"
#non-profits
debtdata[debtdata$control == 2 & debtdata$preddeg == 1, ]$school.category <- "Non-Profit Certificate"
debtdata[debtdata$control == 2 & debtdata$preddeg == 2, ]$school.category <- "Non-Profit Associate's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 3, ]$school.category <- "Non-Profit Bachelor's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 4, ]$school.category <- "Non-Profit Graduate"
#for-profits
debtdata[debtdata$control == 3 & debtdata$preddeg == 1, ]$school.category <- "For-Profit Certificate"
debtdata[debtdata$control == 3 & debtdata$preddeg == 2, ]$school.category <- "For-Profit Associate's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 3, ]$school.category <- "For-Profit Bachelor's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 4, ]$school.category <- "For-Profit Graduate"
#not classified
debtdata[debtdata$control == 0 | debtdata$preddeg == 0, ]$school.category <- "Not Classified"
#### categorize schools into degree categories ####
debtdata$degree.category <- ""
debtdata[debtdata$preddeg== 1 | debtdata$preddeg== 2, ]$degree.category <- "2-Year Degree or Certificate"
debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "MnSCU 4-Year")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
library(ggthemes)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
graphcategories
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
twoyeargraph <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associates") %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
twoyeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,20000), labels=comma) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
twoyeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,15000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
##################
### parameters ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
##################
### cleaning #####
##################
#Load aggregate data file or run source file to create it.
if (!file.exists("debtdata.rda")) {
source('filteraggregate.R')
} else {
load("debtdata.rda")
}
#### Clean up Uppercase Strings ####
#clean up variable names
names(debtdata) <- tolower(names(debtdata))
#clean up institution names
#convert to lowercase
debtdata <- mutate(debtdata, instnm = tolower(instnm)) %>%
#capitalize all word boundaries
mutate(instnm = gsub("\\b(\\w)", "\\U\\1", instnm, perl = TRUE)) %>%
#make and and or lowercased
mutate(instnm = gsub("And", "and", instnm)) %>%
mutate(instnm = gsub("Of", "of", instnm))
#### categorize schools by number of years ##
debtdata$DegreeLevel <- ""
debtdata[(debtdata$preddeg == 1 | debtdata$preddeg == 2),]$DegreeLevel <- "Certificate/Associates"
debtdata[debtdata$preddeg == 3,]$DegreeLevel <- "Bachelor's"
debtdata[debtdata$preddeg == 4,]$DegreeLevel <- "Bachelor's"
#### categorize schools narrowly ####
debtdata$school.category <- ""
#Publics
debtdata[debtdata$control == 1 & debtdata$preddeg == 1, ]$school.category <- "Public Certificate"
debtdata[debtdata$control == 1 & debtdata$preddeg == 2, ]$school.category <- "Public Associate's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 3, ]$school.category <- "Public Bachelor's"
debtdata[debtdata$control == 1 & debtdata$preddeg == 4, ]$school.category <- "Public Graduate"
#non-profits
debtdata[debtdata$control == 2 & debtdata$preddeg == 1, ]$school.category <- "Non-Profit Certificate"
debtdata[debtdata$control == 2 & debtdata$preddeg == 2, ]$school.category <- "Non-Profit Associate's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 3, ]$school.category <- "Non-Profit Bachelor's"
debtdata[debtdata$control == 2 & debtdata$preddeg == 4, ]$school.category <- "Non-Profit Graduate"
#for-profits
debtdata[debtdata$control == 3 & debtdata$preddeg == 1, ]$school.category <- "For-Profit Certificate"
debtdata[debtdata$control == 3 & debtdata$preddeg == 2, ]$school.category <- "For-Profit Associate's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 3, ]$school.category <- "For-Profit Bachelor's"
debtdata[debtdata$control == 3 & debtdata$preddeg == 4, ]$school.category <- "For-Profit Graduate"
#not classified
debtdata[debtdata$control == 0 | debtdata$preddeg == 0, ]$school.category <- "Not Classified"
#### categorize schools into degree categories ####
debtdata$degree.category <- ""
debtdata[debtdata$preddeg== 1 | debtdata$preddeg== 2, ]$degree.category <- "2-Year Degree or Certificate"
debtdata[debtdata$preddeg== 3, ]$degree.category <- "4-Year Bachelor's"
debtdata[debtdata$preddeg==4,]$degree.category <- "Graduate Degree"
#### Categorize Schools in to Minnesota categories ####
debtdata$mn.category <- ""
debtdata$mn.category <- replace(debtdata$mn.category, grep("University of Minnesota-", debtdata$instnm), "U of M")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 1 & debtdata$mn.category != "U of M" , "Minnesota State")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 2, "Private, Non-Profit")
debtdata$mn.category <- replace(debtdata$mn.category,debtdata$control == 3, "Private, For-Profit")
##Save file
save(debtdata, file = "debtdata_clean.rda")
##################
###   setup    ###
##################
working.directory <- "I:/User/Williams/2016 Interim/College Scorecard Analysis"
setwd(working.directory)
library(dplyr)
library(ggplot2)
library(scales)
library(ggthemes)
load("debtdata_clean.rda")
##################
###Inspect Data###
##################
### get number of missings and uncategorized by year
brokenyears <- debtdata %>%
group_by(data.year) %>%
summarise(missings=sum(is.na(debt_mdn)),
uncategorized = sum(mn.category == ""),
suppressed = sum(debt_mdn == "PrivacySuppressed", na.rm=TRUE),
datapresent = sum(!(is.na(debt_mdn)) & !(mn.category == "") & !(debt_mdn=="PrivacySuppressed")),
count=n()
)
brokenyears
####################################
## Debt by Institution type Graph ##
####################################
#Clean up data for making graph chart
graphcategories <- debtdata %>%
filter(mn.category != "") %>% #exclude uncategorized schools
filter(!(is.na(debt_mdn))) %>% #exclude not available data
filter(debt_mdn != "PrivacySuppressed") %>% #exclude privacy suppressed data
filter(data.year != 1996) %>% #exclude 1996 because the data is missing
mutate(debt_mdn = as.numeric(debt_mdn)) %>% #convert median debt number to
group_by(mn.category, data.year, DegreeLevel) %>%
summarise(meandebt = mean(debt_mdn))
twoyeargraph <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associates") %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
twoyeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,15000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
fouryeargraph <- graphcategories %>%
filter(DegreeLevel == "Bachelor's") %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
fouryeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,15000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
fouryeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,20000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
fouryeargraph <- graphcategories %>%
filter(DegreeLevel == "Bachelor's") %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
fouryeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous(limits = c(0,20000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12))) +
xlab("Average Median Debt Amount Upon Entering Repayment")
twoyeargraph <- graphcategories %>%
filter(DegreeLevel == "Certificate/Associates") %>%
ggplot(aes(x=data.year,
y=meandebt,
color=factor(mn.category),
group = factor(mn.category)))
twoyeargraph +
geom_line(size = 1) +
scale_x_continuous("Year", limits = c(1997, 2013), breaks = c(1997, 2001, 2005, 2009, 2013)) +
scale_y_continuous("Average Median Debt Amount Upon Entering Repayment", limits = c(0,15000), labels=dollar) +
guides(col = guide_legend(title = "Institution Type", title.theme = element_text(angle = 0, size =12)))
